//
//Copyright 2021 The Dapr Authors
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//http://www.apache.org/licenses/LICENSE-2.0
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: dapr/proto/runtime/v1/appcallback.proto

package runtimev1

import (
	v1 "github.com/dapr/go-sdk/internal/proto/dapr/proto/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TopicEventResponseStatus allows apps to have finer control over handling of the message.
type TopicEventResponse_TopicEventResponseStatus int32

const (
	// SUCCESS is the default behavior: message is acknowledged and not retried or logged.
	TopicEventResponse_SUCCESS TopicEventResponse_TopicEventResponseStatus = 0
	// RETRY status signals Dapr to retry the message as part of an expected scenario (no warning is logged).
	TopicEventResponse_RETRY TopicEventResponse_TopicEventResponseStatus = 1
	// DROP status signals Dapr to drop the message as part of an unexpected scenario (warning is logged).
	TopicEventResponse_DROP TopicEventResponse_TopicEventResponseStatus = 2
)

// Enum value maps for TopicEventResponse_TopicEventResponseStatus.
var (
	TopicEventResponse_TopicEventResponseStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "RETRY",
		2: "DROP",
	}
	TopicEventResponse_TopicEventResponseStatus_value = map[string]int32{
		"SUCCESS": 0,
		"RETRY":   1,
		"DROP":    2,
	}
)

func (x TopicEventResponse_TopicEventResponseStatus) Enum() *TopicEventResponse_TopicEventResponseStatus {
	p := new(TopicEventResponse_TopicEventResponseStatus)
	*p = x
	return p
}

func (x TopicEventResponse_TopicEventResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopicEventResponse_TopicEventResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_dapr_proto_runtime_v1_appcallback_proto_enumTypes[0].Descriptor()
}

func (TopicEventResponse_TopicEventResponseStatus) Type() protoreflect.EnumType {
	return &file_dapr_proto_runtime_v1_appcallback_proto_enumTypes[0]
}

func (x TopicEventResponse_TopicEventResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopicEventResponse_TopicEventResponseStatus.Descriptor instead.
func (TopicEventResponse_TopicEventResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{3, 0}
}

// BindingEventConcurrency is the kind of concurrency
type BindingEventResponse_BindingEventConcurrency int32

const (
	// SEQUENTIAL sends data to output bindings specified in "to" sequentially.
	BindingEventResponse_SEQUENTIAL BindingEventResponse_BindingEventConcurrency = 0
	// PARALLEL sends data to output bindings specified in "to" in parallel.
	BindingEventResponse_PARALLEL BindingEventResponse_BindingEventConcurrency = 1
)

// Enum value maps for BindingEventResponse_BindingEventConcurrency.
var (
	BindingEventResponse_BindingEventConcurrency_name = map[int32]string{
		0: "SEQUENTIAL",
		1: "PARALLEL",
	}
	BindingEventResponse_BindingEventConcurrency_value = map[string]int32{
		"SEQUENTIAL": 0,
		"PARALLEL":   1,
	}
)

func (x BindingEventResponse_BindingEventConcurrency) Enum() *BindingEventResponse_BindingEventConcurrency {
	p := new(BindingEventResponse_BindingEventConcurrency)
	*p = x
	return p
}

func (x BindingEventResponse_BindingEventConcurrency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BindingEventResponse_BindingEventConcurrency) Descriptor() protoreflect.EnumDescriptor {
	return file_dapr_proto_runtime_v1_appcallback_proto_enumTypes[1].Descriptor()
}

func (BindingEventResponse_BindingEventConcurrency) Type() protoreflect.EnumType {
	return &file_dapr_proto_runtime_v1_appcallback_proto_enumTypes[1]
}

func (x BindingEventResponse_BindingEventConcurrency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BindingEventResponse_BindingEventConcurrency.Descriptor instead.
func (BindingEventResponse_BindingEventConcurrency) EnumDescriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{10, 0}
}

type JobEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Job name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Job data to be sent back to app.
	Data *anypb.Any `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// Required. method is a method name which will be invoked by caller.
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	// The type of data content.
	//
	// This field is required if data delivers http request body
	// Otherwise, this is optional.
	ContentType string `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// HTTP specific fields if request conveys http-compatible request.
	//
	// This field is required for http-compatible request. Otherwise,
	// this field is optional.
	HttpExtension *v1.HTTPExtension `protobuf:"bytes,5,opt,name=http_extension,json=httpExtension,proto3" json:"http_extension,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobEventRequest) Reset() {
	*x = JobEventRequest{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEventRequest) ProtoMessage() {}

func (x *JobEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEventRequest.ProtoReflect.Descriptor instead.
func (*JobEventRequest) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{0}
}

func (x *JobEventRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobEventRequest) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *JobEventRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *JobEventRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *JobEventRequest) GetHttpExtension() *v1.HTTPExtension {
	if x != nil {
		return x.HttpExtension
	}
	return nil
}

// JobEventResponse is the response from the app when a job is triggered.
type JobEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobEventResponse) Reset() {
	*x = JobEventResponse{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEventResponse) ProtoMessage() {}

func (x *JobEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEventResponse.ProtoReflect.Descriptor instead.
func (*JobEventResponse) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{1}
}

// TopicEventRequest message is compatible with CloudEvent spec v1.0
// https://github.com/cloudevents/spec/blob/v1.0/spec.md
type TopicEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id identifies the event. Producers MUST ensure that source + id
	// is unique for each distinct event. If a duplicate event is re-sent
	// (e.g. due to a network error) it MAY have the same id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// source identifies the context in which an event happened.
	// Often this will include information such as the type of the
	// event source, the organization publishing the event or the process
	// that produced the event. The exact syntax and semantics behind
	// the data encoded in the URI is defined by the event producer.
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// The type of event related to the originating occurrence.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// The version of the CloudEvents specification.
	SpecVersion string `protobuf:"bytes,4,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	// The content type of data value.
	DataContentType string `protobuf:"bytes,5,opt,name=data_content_type,json=dataContentType,proto3" json:"data_content_type,omitempty"`
	// The content of the event.
	Data []byte `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	// The pubsub topic which publisher sent to.
	Topic string `protobuf:"bytes,6,opt,name=topic,proto3" json:"topic,omitempty"`
	// The name of the pubsub the publisher sent to.
	PubsubName string `protobuf:"bytes,8,opt,name=pubsub_name,json=pubsubName,proto3" json:"pubsub_name,omitempty"`
	// The matching path from TopicSubscription/routes (if specified) for this event.
	// This value is used by OnTopicEvent to "switch" inside the handler.
	Path string `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`
	// The map of additional custom properties to be sent to the app. These are considered to be cloud event extensions.
	Extensions    *structpb.Struct `protobuf:"bytes,10,opt,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicEventRequest) Reset() {
	*x = TopicEventRequest{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicEventRequest) ProtoMessage() {}

func (x *TopicEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicEventRequest.ProtoReflect.Descriptor instead.
func (*TopicEventRequest) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{2}
}

func (x *TopicEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TopicEventRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *TopicEventRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TopicEventRequest) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *TopicEventRequest) GetDataContentType() string {
	if x != nil {
		return x.DataContentType
	}
	return ""
}

func (x *TopicEventRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TopicEventRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *TopicEventRequest) GetPubsubName() string {
	if x != nil {
		return x.PubsubName
	}
	return ""
}

func (x *TopicEventRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TopicEventRequest) GetExtensions() *structpb.Struct {
	if x != nil {
		return x.Extensions
	}
	return nil
}

// TopicEventResponse is response from app on published message
type TopicEventResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of output bindings.
	Status        TopicEventResponse_TopicEventResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=dapr.proto.runtime.v1.TopicEventResponse_TopicEventResponseStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicEventResponse) Reset() {
	*x = TopicEventResponse{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicEventResponse) ProtoMessage() {}

func (x *TopicEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicEventResponse.ProtoReflect.Descriptor instead.
func (*TopicEventResponse) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{3}
}

func (x *TopicEventResponse) GetStatus() TopicEventResponse_TopicEventResponseStatus {
	if x != nil {
		return x.Status
	}
	return TopicEventResponse_SUCCESS
}

// TopicEventCERequest message is compatible with CloudEvent spec v1.0
type TopicEventCERequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of this cloud event.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// source identifies the context in which an event happened.
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// The type of event related to the originating occurrence.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// The version of the CloudEvents specification.
	SpecVersion string `protobuf:"bytes,4,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	// The content type of data value.
	DataContentType string `protobuf:"bytes,5,opt,name=data_content_type,json=dataContentType,proto3" json:"data_content_type,omitempty"`
	// The content of the event.
	Data []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	// Custom attributes which includes cloud event extensions.
	Extensions    *structpb.Struct `protobuf:"bytes,7,opt,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicEventCERequest) Reset() {
	*x = TopicEventCERequest{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicEventCERequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicEventCERequest) ProtoMessage() {}

func (x *TopicEventCERequest) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicEventCERequest.ProtoReflect.Descriptor instead.
func (*TopicEventCERequest) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{4}
}

func (x *TopicEventCERequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TopicEventCERequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *TopicEventCERequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TopicEventCERequest) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *TopicEventCERequest) GetDataContentType() string {
	if x != nil {
		return x.DataContentType
	}
	return ""
}

func (x *TopicEventCERequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TopicEventCERequest) GetExtensions() *structpb.Struct {
	if x != nil {
		return x.Extensions
	}
	return nil
}

// TopicEventBulkRequestEntry represents a single message inside a bulk request
type TopicEventBulkRequestEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the message.
	EntryId string `protobuf:"bytes,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	// The content of the event.
	//
	// Types that are valid to be assigned to Event:
	//
	//	*TopicEventBulkRequestEntry_Bytes
	//	*TopicEventBulkRequestEntry_CloudEvent
	Event isTopicEventBulkRequestEntry_Event `protobuf_oneof:"event"`
	// content type of the event contained.
	ContentType string `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// The metadata associated with the event.
	Metadata      map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicEventBulkRequestEntry) Reset() {
	*x = TopicEventBulkRequestEntry{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicEventBulkRequestEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicEventBulkRequestEntry) ProtoMessage() {}

func (x *TopicEventBulkRequestEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicEventBulkRequestEntry.ProtoReflect.Descriptor instead.
func (*TopicEventBulkRequestEntry) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{5}
}

func (x *TopicEventBulkRequestEntry) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

func (x *TopicEventBulkRequestEntry) GetEvent() isTopicEventBulkRequestEntry_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *TopicEventBulkRequestEntry) GetBytes() []byte {
	if x != nil {
		if x, ok := x.Event.(*TopicEventBulkRequestEntry_Bytes); ok {
			return x.Bytes
		}
	}
	return nil
}

func (x *TopicEventBulkRequestEntry) GetCloudEvent() *TopicEventCERequest {
	if x != nil {
		if x, ok := x.Event.(*TopicEventBulkRequestEntry_CloudEvent); ok {
			return x.CloudEvent
		}
	}
	return nil
}

func (x *TopicEventBulkRequestEntry) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *TopicEventBulkRequestEntry) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isTopicEventBulkRequestEntry_Event interface {
	isTopicEventBulkRequestEntry_Event()
}

type TopicEventBulkRequestEntry_Bytes struct {
	Bytes []byte `protobuf:"bytes,2,opt,name=bytes,proto3,oneof"`
}

type TopicEventBulkRequestEntry_CloudEvent struct {
	CloudEvent *TopicEventCERequest `protobuf:"bytes,3,opt,name=cloud_event,json=cloudEvent,proto3,oneof"`
}

func (*TopicEventBulkRequestEntry_Bytes) isTopicEventBulkRequestEntry_Event() {}

func (*TopicEventBulkRequestEntry_CloudEvent) isTopicEventBulkRequestEntry_Event() {}

// TopicEventBulkRequest represents request for bulk message
type TopicEventBulkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the bulk request.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The list of items inside this bulk request.
	Entries []*TopicEventBulkRequestEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	// The metadata associated with the this bulk request.
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The pubsub topic which publisher sent to.
	Topic string `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	// The name of the pubsub the publisher sent to.
	PubsubName string `protobuf:"bytes,5,opt,name=pubsub_name,json=pubsubName,proto3" json:"pubsub_name,omitempty"`
	// The type of event related to the originating occurrence.
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// The matching path from TopicSubscription/routes (if specified) for this event.
	// This value is used by OnTopicEvent to "switch" inside the handler.
	Path          string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicEventBulkRequest) Reset() {
	*x = TopicEventBulkRequest{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicEventBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicEventBulkRequest) ProtoMessage() {}

func (x *TopicEventBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicEventBulkRequest.ProtoReflect.Descriptor instead.
func (*TopicEventBulkRequest) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{6}
}

func (x *TopicEventBulkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TopicEventBulkRequest) GetEntries() []*TopicEventBulkRequestEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *TopicEventBulkRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TopicEventBulkRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *TopicEventBulkRequest) GetPubsubName() string {
	if x != nil {
		return x.PubsubName
	}
	return ""
}

func (x *TopicEventBulkRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TopicEventBulkRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// TopicEventBulkResponseEntry Represents single response, as part of TopicEventBulkResponse, to be
// sent by subscibed App for the corresponding single message during bulk subscribe
type TopicEventBulkResponseEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier associated the message.
	EntryId string `protobuf:"bytes,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	// The status of the response.
	Status        TopicEventResponse_TopicEventResponseStatus `protobuf:"varint,2,opt,name=status,proto3,enum=dapr.proto.runtime.v1.TopicEventResponse_TopicEventResponseStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicEventBulkResponseEntry) Reset() {
	*x = TopicEventBulkResponseEntry{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicEventBulkResponseEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicEventBulkResponseEntry) ProtoMessage() {}

func (x *TopicEventBulkResponseEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicEventBulkResponseEntry.ProtoReflect.Descriptor instead.
func (*TopicEventBulkResponseEntry) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{7}
}

func (x *TopicEventBulkResponseEntry) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

func (x *TopicEventBulkResponseEntry) GetStatus() TopicEventResponse_TopicEventResponseStatus {
	if x != nil {
		return x.Status
	}
	return TopicEventResponse_SUCCESS
}

// AppBulkResponse is response from app on published message
type TopicEventBulkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of all responses for the bulk request.
	Statuses      []*TopicEventBulkResponseEntry `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicEventBulkResponse) Reset() {
	*x = TopicEventBulkResponse{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicEventBulkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicEventBulkResponse) ProtoMessage() {}

func (x *TopicEventBulkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicEventBulkResponse.ProtoReflect.Descriptor instead.
func (*TopicEventBulkResponse) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{8}
}

func (x *TopicEventBulkResponse) GetStatuses() []*TopicEventBulkResponseEntry {
	if x != nil {
		return x.Statuses
	}
	return nil
}

// BindingEventRequest represents input bindings event.
type BindingEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The name of the input binding component.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The payload that the input bindings sent
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// The metadata set by the input binging components.
	Metadata      map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BindingEventRequest) Reset() {
	*x = BindingEventRequest{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindingEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindingEventRequest) ProtoMessage() {}

func (x *BindingEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindingEventRequest.ProtoReflect.Descriptor instead.
func (*BindingEventRequest) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{9}
}

func (x *BindingEventRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BindingEventRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BindingEventRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// BindingEventResponse includes operations to save state or
// send data to output bindings optionally.
type BindingEventResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of state store where states are saved.
	StoreName string `protobuf:"bytes,1,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
	// The state key values which will be stored in store_name.
	States []*v1.StateItem `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
	// The list of output bindings.
	To []string `protobuf:"bytes,3,rep,name=to,proto3" json:"to,omitempty"`
	// The content which will be sent to "to" output bindings.
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	// The concurrency of output bindings to send data to
	// "to" output bindings list. The default is SEQUENTIAL.
	Concurrency   BindingEventResponse_BindingEventConcurrency `protobuf:"varint,5,opt,name=concurrency,proto3,enum=dapr.proto.runtime.v1.BindingEventResponse_BindingEventConcurrency" json:"concurrency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BindingEventResponse) Reset() {
	*x = BindingEventResponse{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindingEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindingEventResponse) ProtoMessage() {}

func (x *BindingEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindingEventResponse.ProtoReflect.Descriptor instead.
func (*BindingEventResponse) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{10}
}

func (x *BindingEventResponse) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *BindingEventResponse) GetStates() []*v1.StateItem {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *BindingEventResponse) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *BindingEventResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BindingEventResponse) GetConcurrency() BindingEventResponse_BindingEventConcurrency {
	if x != nil {
		return x.Concurrency
	}
	return BindingEventResponse_SEQUENTIAL
}

// ListTopicSubscriptionsResponse is the message including the list of the subscribing topics.
type ListTopicSubscriptionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of topics.
	Subscriptions []*TopicSubscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicSubscriptionsResponse) Reset() {
	*x = ListTopicSubscriptionsResponse{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicSubscriptionsResponse) ProtoMessage() {}

func (x *ListTopicSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*ListTopicSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{11}
}

func (x *ListTopicSubscriptionsResponse) GetSubscriptions() []*TopicSubscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

// TopicSubscription represents topic and metadata.
type TopicSubscription struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The name of the pubsub containing the topic below to subscribe to.
	PubsubName string `protobuf:"bytes,1,opt,name=pubsub_name,json=pubsubName,proto3" json:"pubsub_name,omitempty"`
	// Required. The name of topic which will be subscribed
	Topic string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	// The optional properties used for this topic's subscription e.g. session id
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The optional routing rules to match against. In the gRPC interface, OnTopicEvent
	// is still invoked but the matching path is sent in the TopicEventRequest.
	Routes *TopicRoutes `protobuf:"bytes,5,opt,name=routes,proto3" json:"routes,omitempty"`
	// The optional dead letter queue for this topic to send events to.
	DeadLetterTopic string `protobuf:"bytes,6,opt,name=dead_letter_topic,json=deadLetterTopic,proto3" json:"dead_letter_topic,omitempty"`
	// The optional bulk subscribe settings for this topic.
	BulkSubscribe *BulkSubscribeConfig `protobuf:"bytes,7,opt,name=bulk_subscribe,json=bulkSubscribe,proto3" json:"bulk_subscribe,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicSubscription) Reset() {
	*x = TopicSubscription{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSubscription) ProtoMessage() {}

func (x *TopicSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSubscription.ProtoReflect.Descriptor instead.
func (*TopicSubscription) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{12}
}

func (x *TopicSubscription) GetPubsubName() string {
	if x != nil {
		return x.PubsubName
	}
	return ""
}

func (x *TopicSubscription) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *TopicSubscription) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TopicSubscription) GetRoutes() *TopicRoutes {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *TopicSubscription) GetDeadLetterTopic() string {
	if x != nil {
		return x.DeadLetterTopic
	}
	return ""
}

func (x *TopicSubscription) GetBulkSubscribe() *BulkSubscribeConfig {
	if x != nil {
		return x.BulkSubscribe
	}
	return nil
}

type TopicRoutes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of rules for this topic.
	Rules []*TopicRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	// The default path for this topic.
	Default       string `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicRoutes) Reset() {
	*x = TopicRoutes{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicRoutes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicRoutes) ProtoMessage() {}

func (x *TopicRoutes) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicRoutes.ProtoReflect.Descriptor instead.
func (*TopicRoutes) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{13}
}

func (x *TopicRoutes) GetRules() []*TopicRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *TopicRoutes) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

type TopicRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The optional CEL expression used to match the event.
	// If the match is not specified, then the route is considered
	// the default.
	Match string `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	// The path used to identify matches for this subscription.
	// This value is passed in TopicEventRequest and used by OnTopicEvent to "switch"
	// inside the handler.
	Path          string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicRule) Reset() {
	*x = TopicRule{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicRule) ProtoMessage() {}

func (x *TopicRule) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicRule.ProtoReflect.Descriptor instead.
func (*TopicRule) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{14}
}

func (x *TopicRule) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

func (x *TopicRule) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// BulkSubscribeConfig is the message to pass settings for bulk subscribe
type BulkSubscribeConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Flag to enable/disable bulk subscribe
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Optional. Max number of messages to be sent in a single bulk request
	MaxMessagesCount int32 `protobuf:"varint,2,opt,name=max_messages_count,json=maxMessagesCount,proto3" json:"max_messages_count,omitempty"`
	// Optional. Max duration to wait for messages to be sent in a single bulk request
	MaxAwaitDurationMs int32 `protobuf:"varint,3,opt,name=max_await_duration_ms,json=maxAwaitDurationMs,proto3" json:"max_await_duration_ms,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BulkSubscribeConfig) Reset() {
	*x = BulkSubscribeConfig{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkSubscribeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkSubscribeConfig) ProtoMessage() {}

func (x *BulkSubscribeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkSubscribeConfig.ProtoReflect.Descriptor instead.
func (*BulkSubscribeConfig) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{15}
}

func (x *BulkSubscribeConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *BulkSubscribeConfig) GetMaxMessagesCount() int32 {
	if x != nil {
		return x.MaxMessagesCount
	}
	return 0
}

func (x *BulkSubscribeConfig) GetMaxAwaitDurationMs() int32 {
	if x != nil {
		return x.MaxAwaitDurationMs
	}
	return 0
}

// ListInputBindingsResponse is the message including the list of input bindings.
type ListInputBindingsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of input bindings.
	Bindings      []string `protobuf:"bytes,1,rep,name=bindings,proto3" json:"bindings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInputBindingsResponse) Reset() {
	*x = ListInputBindingsResponse{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInputBindingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInputBindingsResponse) ProtoMessage() {}

func (x *ListInputBindingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInputBindingsResponse.ProtoReflect.Descriptor instead.
func (*ListInputBindingsResponse) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{16}
}

func (x *ListInputBindingsResponse) GetBindings() []string {
	if x != nil {
		return x.Bindings
	}
	return nil
}

// HealthCheckResponse is the message with the response to the health check.
// This message is currently empty as used as placeholder.
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP(), []int{17}
}

var File_dapr_proto_runtime_v1_appcallback_proto protoreflect.FileDescriptor

const file_dapr_proto_runtime_v1_appcallback_proto_rawDesc = "" +
	"\n" +
	"'dapr/proto/runtime/v1/appcallback.proto\x12\x15dapr.proto.runtime.v1\x1a\x19google/protobuf/any.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a!dapr/proto/common/v1/common.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xd6\x01\n" +
	"\x0fJobEventRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12(\n" +
	"\x04data\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x04data\x12\x16\n" +
	"\x06method\x18\x03 \x01(\tR\x06method\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12J\n" +
	"\x0ehttp_extension\x18\x05 \x01(\v2#.dapr.proto.common.v1.HTTPExtensionR\rhttpExtension\"\x12\n" +
	"\x10JobEventResponse\"\xb6\x02\n" +
	"\x11TopicEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12!\n" +
	"\fspec_version\x18\x04 \x01(\tR\vspecVersion\x12*\n" +
	"\x11data_content_type\x18\x05 \x01(\tR\x0fdataContentType\x12\x12\n" +
	"\x04data\x18\a \x01(\fR\x04data\x12\x14\n" +
	"\x05topic\x18\x06 \x01(\tR\x05topic\x12\x1f\n" +
	"\vpubsub_name\x18\b \x01(\tR\n" +
	"pubsubName\x12\x12\n" +
	"\x04path\x18\t \x01(\tR\x04path\x127\n" +
	"\n" +
	"extensions\x18\n" +
	" \x01(\v2\x17.google.protobuf.StructR\n" +
	"extensions\"\xae\x01\n" +
	"\x12TopicEventResponse\x12Z\n" +
	"\x06status\x18\x01 \x01(\x0e2B.dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatusR\x06status\"<\n" +
	"\x18TopicEventResponseStatus\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\t\n" +
	"\x05RETRY\x10\x01\x12\b\n" +
	"\x04DROP\x10\x02\"\xed\x01\n" +
	"\x13TopicEventCERequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12!\n" +
	"\fspec_version\x18\x04 \x01(\tR\vspecVersion\x12*\n" +
	"\x11data_content_type\x18\x05 \x01(\tR\x0fdataContentType\x12\x12\n" +
	"\x04data\x18\x06 \x01(\fR\x04data\x127\n" +
	"\n" +
	"extensions\x18\a \x01(\v2\x17.google.protobuf.StructR\n" +
	"extensions\"\xe4\x02\n" +
	"\x1aTopicEventBulkRequestEntry\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\tR\aentryId\x12\x16\n" +
	"\x05bytes\x18\x02 \x01(\fH\x00R\x05bytes\x12M\n" +
	"\vcloud_event\x18\x03 \x01(\v2*.dapr.proto.runtime.v1.TopicEventCERequestH\x00R\n" +
	"cloudEvent\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12[\n" +
	"\bmetadata\x18\x05 \x03(\v2?.dapr.proto.runtime.v1.TopicEventBulkRequestEntry.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\a\n" +
	"\x05event\"\xe8\x02\n" +
	"\x15TopicEventBulkRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12K\n" +
	"\aentries\x18\x02 \x03(\v21.dapr.proto.runtime.v1.TopicEventBulkRequestEntryR\aentries\x12V\n" +
	"\bmetadata\x18\x03 \x03(\v2:.dapr.proto.runtime.v1.TopicEventBulkRequest.MetadataEntryR\bmetadata\x12\x14\n" +
	"\x05topic\x18\x04 \x01(\tR\x05topic\x12\x1f\n" +
	"\vpubsub_name\x18\x05 \x01(\tR\n" +
	"pubsubName\x12\x12\n" +
	"\x04type\x18\x06 \x01(\tR\x04type\x12\x12\n" +
	"\x04path\x18\a \x01(\tR\x04path\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x01\n" +
	"\x1bTopicEventBulkResponseEntry\x12\x19\n" +
	"\bentry_id\x18\x01 \x01(\tR\aentryId\x12Z\n" +
	"\x06status\x18\x02 \x01(\x0e2B.dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatusR\x06status\"h\n" +
	"\x16TopicEventBulkResponse\x12N\n" +
	"\bstatuses\x18\x01 \x03(\v22.dapr.proto.runtime.v1.TopicEventBulkResponseEntryR\bstatuses\"\xd0\x01\n" +
	"\x13BindingEventRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12T\n" +
	"\bmetadata\x18\x03 \x03(\v28.dapr.proto.runtime.v1.BindingEventRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb2\x02\n" +
	"\x14BindingEventResponse\x12\x1d\n" +
	"\n" +
	"store_name\x18\x01 \x01(\tR\tstoreName\x127\n" +
	"\x06states\x18\x02 \x03(\v2\x1f.dapr.proto.common.v1.StateItemR\x06states\x12\x0e\n" +
	"\x02to\x18\x03 \x03(\tR\x02to\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12e\n" +
	"\vconcurrency\x18\x05 \x01(\x0e2C.dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrencyR\vconcurrency\"7\n" +
	"\x17BindingEventConcurrency\x12\x0e\n" +
	"\n" +
	"SEQUENTIAL\x10\x00\x12\f\n" +
	"\bPARALLEL\x10\x01\"p\n" +
	"\x1eListTopicSubscriptionsResponse\x12N\n" +
	"\rsubscriptions\x18\x01 \x03(\v2(.dapr.proto.runtime.v1.TopicSubscriptionR\rsubscriptions\"\x96\x03\n" +
	"\x11TopicSubscription\x12\x1f\n" +
	"\vpubsub_name\x18\x01 \x01(\tR\n" +
	"pubsubName\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12R\n" +
	"\bmetadata\x18\x03 \x03(\v26.dapr.proto.runtime.v1.TopicSubscription.MetadataEntryR\bmetadata\x12:\n" +
	"\x06routes\x18\x05 \x01(\v2\".dapr.proto.runtime.v1.TopicRoutesR\x06routes\x12*\n" +
	"\x11dead_letter_topic\x18\x06 \x01(\tR\x0fdeadLetterTopic\x12Q\n" +
	"\x0ebulk_subscribe\x18\a \x01(\v2*.dapr.proto.runtime.v1.BulkSubscribeConfigR\rbulkSubscribe\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"_\n" +
	"\vTopicRoutes\x126\n" +
	"\x05rules\x18\x01 \x03(\v2 .dapr.proto.runtime.v1.TopicRuleR\x05rules\x12\x18\n" +
	"\adefault\x18\x02 \x01(\tR\adefault\"5\n" +
	"\tTopicRule\x12\x14\n" +
	"\x05match\x18\x01 \x01(\tR\x05match\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"\x90\x01\n" +
	"\x13BulkSubscribeConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12,\n" +
	"\x12max_messages_count\x18\x02 \x01(\x05R\x10maxMessagesCount\x121\n" +
	"\x15max_await_duration_ms\x18\x03 \x01(\x05R\x12maxAwaitDurationMs\"7\n" +
	"\x19ListInputBindingsResponse\x12\x1a\n" +
	"\bbindings\x18\x01 \x03(\tR\bbindings\"\x15\n" +
	"\x13HealthCheckResponse2\x86\x04\n" +
	"\vAppCallback\x12W\n" +
	"\bOnInvoke\x12#.dapr.proto.common.v1.InvokeRequest\x1a$.dapr.proto.common.v1.InvokeResponse\"\x00\x12i\n" +
	"\x16ListTopicSubscriptions\x12\x16.google.protobuf.Empty\x1a5.dapr.proto.runtime.v1.ListTopicSubscriptionsResponse\"\x00\x12e\n" +
	"\fOnTopicEvent\x12(.dapr.proto.runtime.v1.TopicEventRequest\x1a).dapr.proto.runtime.v1.TopicEventResponse\"\x00\x12_\n" +
	"\x11ListInputBindings\x12\x16.google.protobuf.Empty\x1a0.dapr.proto.runtime.v1.ListInputBindingsResponse\"\x00\x12k\n" +
	"\x0eOnBindingEvent\x12*.dapr.proto.runtime.v1.BindingEventRequest\x1a+.dapr.proto.runtime.v1.BindingEventResponse\"\x002m\n" +
	"\x16AppCallbackHealthCheck\x12S\n" +
	"\vHealthCheck\x12\x16.google.protobuf.Empty\x1a*.dapr.proto.runtime.v1.HealthCheckResponse\"\x002\xf0\x01\n" +
	"\x10AppCallbackAlpha\x12w\n" +
	"\x16OnBulkTopicEventAlpha1\x12,.dapr.proto.runtime.v1.TopicEventBulkRequest\x1a-.dapr.proto.runtime.v1.TopicEventBulkResponse\"\x00\x12c\n" +
	"\x10OnJobEventAlpha1\x12&.dapr.proto.runtime.v1.JobEventRequest\x1a'.dapr.proto.runtime.v1.JobEventResponseB\xeb\x01\n" +
	"\x19com.dapr.proto.runtime.v1B\x10AppcallbackProtoP\x01ZEgithub.com/dapr/go-sdk/internal/proto/dapr/proto/runtime/v1;runtimev1\xa2\x02\x03DPR\xaa\x02\x15Dapr.Proto.Runtime.V1\xca\x02\x15Dapr\\Proto\\Runtime\\V1\xe2\x02!Dapr\\Proto\\Runtime\\V1\\GPBMetadata\xea\x02\x18Dapr::Proto::Runtime::V1b\x06proto3"

var (
	file_dapr_proto_runtime_v1_appcallback_proto_rawDescOnce sync.Once
	file_dapr_proto_runtime_v1_appcallback_proto_rawDescData []byte
)

func file_dapr_proto_runtime_v1_appcallback_proto_rawDescGZIP() []byte {
	file_dapr_proto_runtime_v1_appcallback_proto_rawDescOnce.Do(func() {
		file_dapr_proto_runtime_v1_appcallback_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dapr_proto_runtime_v1_appcallback_proto_rawDesc), len(file_dapr_proto_runtime_v1_appcallback_proto_rawDesc)))
	})
	return file_dapr_proto_runtime_v1_appcallback_proto_rawDescData
}

var file_dapr_proto_runtime_v1_appcallback_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dapr_proto_runtime_v1_appcallback_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_dapr_proto_runtime_v1_appcallback_proto_goTypes = []any{
	(TopicEventResponse_TopicEventResponseStatus)(0),  // 0: dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus
	(BindingEventResponse_BindingEventConcurrency)(0), // 1: dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency
	(*JobEventRequest)(nil),                           // 2: dapr.proto.runtime.v1.JobEventRequest
	(*JobEventResponse)(nil),                          // 3: dapr.proto.runtime.v1.JobEventResponse
	(*TopicEventRequest)(nil),                         // 4: dapr.proto.runtime.v1.TopicEventRequest
	(*TopicEventResponse)(nil),                        // 5: dapr.proto.runtime.v1.TopicEventResponse
	(*TopicEventCERequest)(nil),                       // 6: dapr.proto.runtime.v1.TopicEventCERequest
	(*TopicEventBulkRequestEntry)(nil),                // 7: dapr.proto.runtime.v1.TopicEventBulkRequestEntry
	(*TopicEventBulkRequest)(nil),                     // 8: dapr.proto.runtime.v1.TopicEventBulkRequest
	(*TopicEventBulkResponseEntry)(nil),               // 9: dapr.proto.runtime.v1.TopicEventBulkResponseEntry
	(*TopicEventBulkResponse)(nil),                    // 10: dapr.proto.runtime.v1.TopicEventBulkResponse
	(*BindingEventRequest)(nil),                       // 11: dapr.proto.runtime.v1.BindingEventRequest
	(*BindingEventResponse)(nil),                      // 12: dapr.proto.runtime.v1.BindingEventResponse
	(*ListTopicSubscriptionsResponse)(nil),            // 13: dapr.proto.runtime.v1.ListTopicSubscriptionsResponse
	(*TopicSubscription)(nil),                         // 14: dapr.proto.runtime.v1.TopicSubscription
	(*TopicRoutes)(nil),                               // 15: dapr.proto.runtime.v1.TopicRoutes
	(*TopicRule)(nil),                                 // 16: dapr.proto.runtime.v1.TopicRule
	(*BulkSubscribeConfig)(nil),                       // 17: dapr.proto.runtime.v1.BulkSubscribeConfig
	(*ListInputBindingsResponse)(nil),                 // 18: dapr.proto.runtime.v1.ListInputBindingsResponse
	(*HealthCheckResponse)(nil),                       // 19: dapr.proto.runtime.v1.HealthCheckResponse
	nil,                                               // 20: dapr.proto.runtime.v1.TopicEventBulkRequestEntry.MetadataEntry
	nil,                                               // 21: dapr.proto.runtime.v1.TopicEventBulkRequest.MetadataEntry
	nil,                                               // 22: dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry
	nil,                                               // 23: dapr.proto.runtime.v1.TopicSubscription.MetadataEntry
	(*anypb.Any)(nil),                                 // 24: google.protobuf.Any
	(*v1.HTTPExtension)(nil),                          // 25: dapr.proto.common.v1.HTTPExtension
	(*structpb.Struct)(nil),                           // 26: google.protobuf.Struct
	(*v1.StateItem)(nil),                              // 27: dapr.proto.common.v1.StateItem
	(*v1.InvokeRequest)(nil),                          // 28: dapr.proto.common.v1.InvokeRequest
	(*emptypb.Empty)(nil),                             // 29: google.protobuf.Empty
	(*v1.InvokeResponse)(nil),                         // 30: dapr.proto.common.v1.InvokeResponse
}
var file_dapr_proto_runtime_v1_appcallback_proto_depIdxs = []int32{
	24, // 0: dapr.proto.runtime.v1.JobEventRequest.data:type_name -> google.protobuf.Any
	25, // 1: dapr.proto.runtime.v1.JobEventRequest.http_extension:type_name -> dapr.proto.common.v1.HTTPExtension
	26, // 2: dapr.proto.runtime.v1.TopicEventRequest.extensions:type_name -> google.protobuf.Struct
	0,  // 3: dapr.proto.runtime.v1.TopicEventResponse.status:type_name -> dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus
	26, // 4: dapr.proto.runtime.v1.TopicEventCERequest.extensions:type_name -> google.protobuf.Struct
	6,  // 5: dapr.proto.runtime.v1.TopicEventBulkRequestEntry.cloud_event:type_name -> dapr.proto.runtime.v1.TopicEventCERequest
	20, // 6: dapr.proto.runtime.v1.TopicEventBulkRequestEntry.metadata:type_name -> dapr.proto.runtime.v1.TopicEventBulkRequestEntry.MetadataEntry
	7,  // 7: dapr.proto.runtime.v1.TopicEventBulkRequest.entries:type_name -> dapr.proto.runtime.v1.TopicEventBulkRequestEntry
	21, // 8: dapr.proto.runtime.v1.TopicEventBulkRequest.metadata:type_name -> dapr.proto.runtime.v1.TopicEventBulkRequest.MetadataEntry
	0,  // 9: dapr.proto.runtime.v1.TopicEventBulkResponseEntry.status:type_name -> dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus
	9,  // 10: dapr.proto.runtime.v1.TopicEventBulkResponse.statuses:type_name -> dapr.proto.runtime.v1.TopicEventBulkResponseEntry
	22, // 11: dapr.proto.runtime.v1.BindingEventRequest.metadata:type_name -> dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry
	27, // 12: dapr.proto.runtime.v1.BindingEventResponse.states:type_name -> dapr.proto.common.v1.StateItem
	1,  // 13: dapr.proto.runtime.v1.BindingEventResponse.concurrency:type_name -> dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency
	14, // 14: dapr.proto.runtime.v1.ListTopicSubscriptionsResponse.subscriptions:type_name -> dapr.proto.runtime.v1.TopicSubscription
	23, // 15: dapr.proto.runtime.v1.TopicSubscription.metadata:type_name -> dapr.proto.runtime.v1.TopicSubscription.MetadataEntry
	15, // 16: dapr.proto.runtime.v1.TopicSubscription.routes:type_name -> dapr.proto.runtime.v1.TopicRoutes
	17, // 17: dapr.proto.runtime.v1.TopicSubscription.bulk_subscribe:type_name -> dapr.proto.runtime.v1.BulkSubscribeConfig
	16, // 18: dapr.proto.runtime.v1.TopicRoutes.rules:type_name -> dapr.proto.runtime.v1.TopicRule
	28, // 19: dapr.proto.runtime.v1.AppCallback.OnInvoke:input_type -> dapr.proto.common.v1.InvokeRequest
	29, // 20: dapr.proto.runtime.v1.AppCallback.ListTopicSubscriptions:input_type -> google.protobuf.Empty
	4,  // 21: dapr.proto.runtime.v1.AppCallback.OnTopicEvent:input_type -> dapr.proto.runtime.v1.TopicEventRequest
	29, // 22: dapr.proto.runtime.v1.AppCallback.ListInputBindings:input_type -> google.protobuf.Empty
	11, // 23: dapr.proto.runtime.v1.AppCallback.OnBindingEvent:input_type -> dapr.proto.runtime.v1.BindingEventRequest
	29, // 24: dapr.proto.runtime.v1.AppCallbackHealthCheck.HealthCheck:input_type -> google.protobuf.Empty
	8,  // 25: dapr.proto.runtime.v1.AppCallbackAlpha.OnBulkTopicEventAlpha1:input_type -> dapr.proto.runtime.v1.TopicEventBulkRequest
	2,  // 26: dapr.proto.runtime.v1.AppCallbackAlpha.OnJobEventAlpha1:input_type -> dapr.proto.runtime.v1.JobEventRequest
	30, // 27: dapr.proto.runtime.v1.AppCallback.OnInvoke:output_type -> dapr.proto.common.v1.InvokeResponse
	13, // 28: dapr.proto.runtime.v1.AppCallback.ListTopicSubscriptions:output_type -> dapr.proto.runtime.v1.ListTopicSubscriptionsResponse
	5,  // 29: dapr.proto.runtime.v1.AppCallback.OnTopicEvent:output_type -> dapr.proto.runtime.v1.TopicEventResponse
	18, // 30: dapr.proto.runtime.v1.AppCallback.ListInputBindings:output_type -> dapr.proto.runtime.v1.ListInputBindingsResponse
	12, // 31: dapr.proto.runtime.v1.AppCallback.OnBindingEvent:output_type -> dapr.proto.runtime.v1.BindingEventResponse
	19, // 32: dapr.proto.runtime.v1.AppCallbackHealthCheck.HealthCheck:output_type -> dapr.proto.runtime.v1.HealthCheckResponse
	10, // 33: dapr.proto.runtime.v1.AppCallbackAlpha.OnBulkTopicEventAlpha1:output_type -> dapr.proto.runtime.v1.TopicEventBulkResponse
	3,  // 34: dapr.proto.runtime.v1.AppCallbackAlpha.OnJobEventAlpha1:output_type -> dapr.proto.runtime.v1.JobEventResponse
	27, // [27:35] is the sub-list for method output_type
	19, // [19:27] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_dapr_proto_runtime_v1_appcallback_proto_init() }
func file_dapr_proto_runtime_v1_appcallback_proto_init() {
	if File_dapr_proto_runtime_v1_appcallback_proto != nil {
		return
	}
	file_dapr_proto_runtime_v1_appcallback_proto_msgTypes[5].OneofWrappers = []any{
		(*TopicEventBulkRequestEntry_Bytes)(nil),
		(*TopicEventBulkRequestEntry_CloudEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dapr_proto_runtime_v1_appcallback_proto_rawDesc), len(file_dapr_proto_runtime_v1_appcallback_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_dapr_proto_runtime_v1_appcallback_proto_goTypes,
		DependencyIndexes: file_dapr_proto_runtime_v1_appcallback_proto_depIdxs,
		EnumInfos:         file_dapr_proto_runtime_v1_appcallback_proto_enumTypes,
		MessageInfos:      file_dapr_proto_runtime_v1_appcallback_proto_msgTypes,
	}.Build()
	File_dapr_proto_runtime_v1_appcallback_proto = out.File
	file_dapr_proto_runtime_v1_appcallback_proto_goTypes = nil
	file_dapr_proto_runtime_v1_appcallback_proto_depIdxs = nil
}
